.atm-lambda-form {
  $padding-right: 15em;
  $space-for-remove-entry: 1em;
  $entry-toggle-container-width: ($padding-right - $space-for-remove-entry) / 2;
  $nested-fields-indent: 2em;

  .form .one-way-toggle {
    display: inline-flex;
  }

  .arguments-field,
  .results-field {
    > .field-component > .collapse {
      > .collection-item {
        position: relative;
        border: 1px solid $main-border-color;
        border-radius: $border-radius-base;
        padding: $form-group-margin-bottom;
        padding-bottom: 0;
        background-color: rgba($color-one-semiwhite, 0.2);

        ~ * {
          margin-top: $form-group-margin-bottom;
        }
      }
    }

    .entryName-field,
    .entryDataSpec-field .type-field,
    .entryDefaultValue-field {
      .control-label {
        display: none;
      }
    }
  }

  .mountSpaceOptions-field {
    margin-left: $nested-fields-indent;
  }

  .entry-name {
    order: 0;
  }

  .entryDataSpec-field {
    .type-field {
      order: 1;
    }

    .valueConstraints-field {
      order: 4;
      flex-basis: 100%;
    }

    &,
    > .field-component,
    .entryDataSpec-collapse,
    .entryDataSpec-children {
      display: contents;
    }
  }

  .entryIsArray-field {
    order: 2;
  }

  .entryIsOptional-field {
    order: 3;
  }

  .entryDefaultValue-field {
    order: 5;
  }

  .resources-field {
    flex-wrap: wrap;

    > .control-label {
      @include font-semibold();
      padding-top: $padding-large-vertical;
      margin-bottom: 0.7em;
      flex-basis: 100%;
      max-width: initial;
      border-top: 1px solid $main-border-color;
      text-transform: uppercase;
    }
  }

  .form .footer-buttons {
    float: none;
    text-align: left;
    .btn {
      margin-left: $padding-small-horizontal;
    }
  }

  .time-series-measurement-value-constraints-editor {
    flex-basis: 100%;

    > .control-label {
      width: 100%;
      padding: 0;
      margin-bottom: 5px;
    }

    .add-field-button {
      margin-top: 0;
      margin-bottom: $form-group-margin-bottom;
    }
  }

  @media (max-width: $screen-xs-max) {
    .arguments-field,
    .results-field {
      > .control-label {
        margin-bottom: $form-group-margin-bottom / 2;
      }
    }
  }

  @media (min-width: $screen-sm-min) {
    .control-label {
      width: 9em;
      text-align: left;
    }

    .arguments-field,
    .results-field {
      flex-wrap: nowrap;

      .entry-children {
        display: flex;
        flex-wrap: wrap;
        align-items: flex-start;
      }
    }

    @media (max-width: $screen-sm-max) {
      .entryName-field,
      .entryDataSpec-field .type-field,
      .entryDefaultValue-field {
        flex: 1 1 100%;
      }

      .entryIsArray-field,
      .entryIsOptional-field {
        .control-label {
          width: initial;
          min-width: initial;
        }
      }
    }
  }

  @media (min-width: $screen-md-min) {
    $x-offset-to-center-toggles: ($entry-toggle-container-width - $toggle-width) / 6;

    .control-label {
      width: 12em;
    }

    .fields-group-children.-children {
      > * {
        margin-right: $padding-right;
      }

      .arguments-field,
      .results-field {
        margin-right: 0;
      }
    }

    .arguments-field,
    .results-field {
      .entryName-field {
        flex: 0 1 calc(50% - #{$padding-right / 2});
      }

      .entryDataSpec-field .type-field {
        flex: 0 1 calc(50% - #{$padding-right / 2} - #{$padding-base-vertical});
        min-width: 15em;
        margin-left: $padding-base-vertical;
      }

      .entryIsArray-field,
      .entryIsOptional-field {
        flex: 0 1 $entry-toggle-container-width;
        height: $input-height-base;

        .control-label {
          position: absolute;
          min-width: initial;
          width: initial;
          max-width: initial;
          padding: 0;
          bottom: 90%;
          left: 50%;
          transform: translateX(-50%);
        }

        .field-component {
          text-align: center;
        }
      }

      .entryIsArray-field {
        transform: translateX(#{$x-offset-to-center-toggles});
      }

      .entryIsOptional-field {
        transform: translateX(-#{$x-offset-to-center-toggles});
      }

      .entryDefaultValue-field {
        margin-right: $padding-right;
      }

      .entry-field + .remove-field-button-container {
        position: absolute;
        right: 0.1em;
        top: 0.35em;
        display: initial;
      }
    }
  }
}
