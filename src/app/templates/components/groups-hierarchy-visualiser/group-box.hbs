{{#if groupBox.leftLine.isVisible}}
  {{groups-hierarchy-visualiser/group-box-line
    class="line-to-parent"
    line=groupBox.leftLine
    modifyPrivileges=modifyPrivileges
    removeRelation=removeRelation}}
{{/if}}
{{#if groupBox.rightLine.isVisible}}
  {{groups-hierarchy-visualiser/group-box-line
    class="line-to-child"
    line=groupBox.rightLine
    modifyPrivileges=modifyPrivileges
    removeRelation=removeRelation}}
{{/if}}

{{record-icon class="box-icon" record=groupBox.group useSubtypeIcon=true}}

{{!-- optimization: rendering editor only when needed --}}
{{#if isRenaming}}
  {{one-inline-editor
    isEditing=isRenaming
    value=groupBox.group.name
    showEmptyInfo=false
    onSave=(action "rename")
    editOnClick=false
    onEdit=(action (mut isRenaming))
    class="one-label name-editor"
    inputClasses="input-sm"}}
{{else}}
  {{#truncated-string class="group-name"}}{{groupBox.group.name}}{{/truncated-string}}
{{/if}}

{{groups-hierarchy-visualiser/group-box-relation
  relationType="parents"
  group=groupBox.group
  expandRelation=showParents
  isExpanded=parentsRelationActive}}

{{groups-hierarchy-visualiser/group-box-relation
  relationType="children"
  group=groupBox.group
  expandRelation=showChildren
  isExpanded=childrenRelationActive}}

{{#if groupBox.group.directMembership}}
  {{#one-icon icon="user" class="direct-membership-icon"}}
    {{one-tooltip title=(tt this "youAreDirectMember")}}
  {{/one-icon}}
{{/if}}
{{#if groupBox.group.isEffectiveMember}}
  {{one-icon
    icon="settings-circle-filled"
    class=(concat "actions-trigger group-actions-trigger actions-group-" elementId)
    click=(action "toggleActions" (not actionsOpened))}}
  {{!-- optimization: rendering actions popover on user click instead of rendering it on init --}}
  {{#render-later triggerRender=actionsOpened}}
    {{#one-webui-popover
      class="group-actions"
      padding=false
      popoverStyle="with-dropdown"
      triggerSelector=(concat ".actions-group-" elementId)
      open=actionsOpened
      placement="context-menu"
      onToggle=(action "toggleActions") as |popover|}}
      {{#click-outside
        onClickOutside=(action "toggleActions" false)
        exceptSelector=(concat ".actions-group-" elementId)
      }}
        {{actions-popover-content
          class="groups-hierarchy-visualiser-actions"
          actionsArray=groupActions
          actionClicked=(action "toggleActions" false)}}
      {{/click-outside}}
    {{/one-webui-popover}}
  {{/render-later}}
{{/if}}
